{"createdAt":"2025-10-22T00:28:55.906Z","updatedAt":"2025-10-29T15:48:24.584Z","id":"RMWFbJWTcYCUHj3G","name":"Integracao STW Chat e Desk - Formulario Integracao","active":true,"isArchived":false,"nodes":[{"parameters":{"respondWith":"text","responseBody":"={{ $json.categorias }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-128,592],"id":"c623d82d-9f9b-4123-a72e-e7f5c2b0cd3b","name":"Respond to Webhook"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"=get-categories-list","operator":{"type":"string","operation":"equals"},"id":"9e6ce5fc-cefd-4a27-ab32-d2126ea30696"}],"combinator":"and"},"renameOutput":true,"outputKey":"categorias"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"95b20d97-a88a-4164-859f-97e44e9cdb64","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-subcategories-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"sub-categorias"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7d36a600-72f3-4c15-a7e1-8e0fd5dfc357","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-types-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"tipo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9ddaa321-df74-45e1-8f5d-d49508a69ffa","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-operators-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"operadores"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4950265e-d81b-4cab-9f3a-708d4880782a","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-applicants-list","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"solicitantes"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"81f4a870-0a5a-466a-896d-9ae91c6dffc3","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-status","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"status"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fc05060b-e6ca-4be5-9dc4-9f40396cf424","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-causes","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"causas"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"727c3491-453b-4d3f-8d6a-2f971e8255ac","leftValue":"={{ $('RequestDesk').item.json.body.event }}","rightValue":"get-open-tickets","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"chamados"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-832,1136],"id":"b7b3ce0a-aeea-4db5-ac60-def180c97f72","name":"Switch"},{"parameters":{"method":"POST","url":"https://api.desk.ms/Login/autenticar","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"3c6a9bc092a7386d6485a2fba65b48849c8b5647"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1040,1216],"id":"d883701b-e359-4a42-9abc-5cdff99fd365","name":"getToken"},{"parameters":{"httpMethod":"POST","path":"proxy-integration-desk","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1232,1216],"id":"037cd39c-4e24-4dc7-ba7c-c1a902bb88e0","name":"RequestDesk","webhookId":"ee451848-6029-4fd1-9fab-c30fb0b0babd"},{"parameters":{"jsCode":"const items = $input.all();\nasync function main() {\n  const subcategorias = items.map(item => item.json.sub_categoria);\n\n  return {\n    json: {\n      subcategorias\n    }\n  };\n}\n\nreturn main();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-336,784],"id":"a3d14782-72dd-4b5d-8e6a-02d1c78fdc23","name":"Code1"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.subcategorias }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-128,784],"id":"1139958d-8d80-4c91-ad93-a87fdd398841","name":"Respond to Webhook3"},{"parameters":{"jsCode":"const token = $('getToken').item.json.data;\nconst items = $input.all();\nconst number = $('RequestDesk').first().json.body.number\nconst solicitanteId = $('RequestDesk').first().json.body.solicitanteId\n\nasync function getAssuntos(categoria, codigoCliente) {\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/ListaAutocategoria\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": categoria,\n      \"Ativo\": \"S\",\n      \"Filtro\": {\n        \"ListaCatalogoUsuario\": [codigoCliente, \"equal\"]\n      }\n    }\n  };\n\n  const response = await this.helpers.httpRequest(request);\n\n  const normalize = (s) => (s ?? \"\")\n    .toString()\n    .trim()\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\");\n\n  const q = normalize(categoria);\n  const hasExactPrefix =\n    Array.isArray(response?.root) &&\n    response.root.some(item => {\n      const assunto = normalize(item?.Assunto);\n      return assunto.startsWith(q);\n    });\n\n  return hasExactPrefix ? categoria : null;\n}\n\nasync function main() {\n  const promises = items.map(item => getAssuntos(item.json.categoria, solicitanteId));\n  const categoriasComChave = await Promise.all(promises);\n\n  const categoriasFiltradas = categoriasComChave.filter(Boolean);\n\n  return {\n    json: {\n      categorias: categoriasFiltradas\n    }\n  };\n}\n\nreturn main();\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-336,592],"id":"12506682-0b3c-40ca-a69a-3fb90e6e4645","name":"Code4","alwaysOutputData":true},{"parameters":{"operation":"executeQuery","query":"select distinct sub_categoria from AUTO_CATEGORIA_DESK where categoria = '{{ $('RequestDesk').item.json.body.assuntoId }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,784],"id":"51e6495a-3af2-4ad0-b11a-b86fc55568c4","name":"MySQL3","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select distinct tipo from AUTO_CATEGORIA_DESK where categoria = '{{ $('RequestDesk').item.json.body.assunto }}' and  sub_categoria = '{{ $('RequestDesk').item.json.body.subcategoria }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,944],"id":"b7a408a7-456f-42f9-bbc5-a9002e2d9048","name":"MySQL2","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"text","responseBody":"={{ $json.tipos }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-128,944],"id":"52c5d8a8-f589-41d6-a8c8-51c9940d1419","name":"Respond to Webhook4"},{"parameters":{"jsCode":"const items = $input.all();\nasync function main() {\n  const tipos = items.map(item => item.json.tipo);\n\n  return {\n    json: {\n      tipos\n    }\n  };\n}\n\nreturn main();\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-336,944],"id":"951d39a9-60d7-4c9f-8840-367f1d19ba71","name":"Code"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n  <title>Formulário de Atendimento</title>\n\n<style>\n    body {\n      background: #f9f9f9;\n      color: #333;\n      padding-bottom: 80px;\n      /* min-height: 100vh; */\n    }\n    .form-container {\n      max-width: 400px;\n      background: #fff;\n      border-radius: 10px;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.07);\n      margin: 32px auto 0 auto;\n      padding: 24px;\n    }\n    \n    /* Modal customizado */\n    #modal-confirm {\n      display: none;\n      position: fixed; \n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.3);\n      align-items: center; \n      justify-content: center; \n      z-index: 9999;\n    }\n    #modal-confirm .modal-box {\n      background: white;\n      padding: 24px 18px;\n      border-radius: 10px;\n      min-width: 250px;\n      text-align: center;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.18);\n    }\n    .form-check-input:checked {\n      background-color: #198754;\n      border-color: #198754;\n    }\n</style>\n\n</head>\n<body>\n  <div class=\"form-container\">\n    <!-- <h4 class=\"mb-3 text-center\">Formulário de Atendimento</h4> -->\n    <form id=\"form-atendimento\" action=\"https://n8n.systemway.com.vc/webhook/749c4c10-156f-4044-845f-a7b1bc4c55a2\" method=\"POST\">\n      <input type=\"hidden\" id=\"chatId\" name=\"chatId\" value=\"{{ $json.query.chatId }}\">\n      <input type=\"hidden\" id=\"number\" name=\"number\" value=\"{{ $json.query.number }}\"> \n      <input type=\"hidden\" id=\"cliente\" name=\"cliente\">\n      <input type=\"hidden\" id=\"nomeSolicitante\" name=\"nomeSolicitante\">\n      <input type=\"hidden\" id=\"solicitanteId\" name=\"solicitanteId\">\n\n      <div class=\"mb-3\">\n        <label for=\"solicitante\" class=\"form-label\">Solicitante:</label>\n        <select id=\"solicitante\" name=\"solicitante\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"assunto\" class=\"form-label\">Assunto:</label>\n        <select id=\"assunto\" name=\"assunto\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"subcategoria\" class=\"form-label\">Subcategoria:</label>\n        <select id=\"subcategoria\" name=\"subcategoria\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"tipo\" class=\"form-label\">Tipo:</label>\n        <select id=\"tipo\" name=\"tipo\" class=\"form-select\" required></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"obsInterna\" class=\"form-label\">Observação Interna:</label>\n        <textarea id=\"obsInterna\" name=\"obsInterna\" class=\"form-control\" rows=\"4\" placeholder=\"Descreva o problema ...\"></textarea>\n      </div>\n\n      <div class=\"mb-3\">\n        <div class=\"form-check\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"firstCallResolution\" name=\"firstCallResolution\" value=\"true\">\n          <label class=\"form-check-label\" for=\"firstCallResolution\">\n            First Call Resolution\n          </label>\n        </div>\n      </div>\n      <div id=\"campo-fcr-causa\" class=\"mb-3\" style=\"display:none;\">\n        <label for=\"fcrCausa\" class=\"form-label\">Causa da Resolução:</label>\n        <select id=\"fcrCausa\" name=\"fcrCausa\" class=\"form-select\"></select>\n      </div>\n      \n      <div id=\"campo-fcr-obs\" class=\"mb-3\" style=\"display:none;\">\n        <label for=\"fcrObservacao\" class=\"form-label\">Observação da Resolução:</label>\n        <textarea id=\"fcrObservacao\" name=\"fcrObservacao\" class=\"form-control\" rows=\"3\" placeholder=\"Descreva como o problema foi resolvido...\"></textarea>\n      </div>\n\n      \n      <div class=\"mb-3\">\n        <label for=\"grupo\" class=\"form-label\">Grupo:</label>\n        <select id=\"grupo\" name=\"grupo\" class=\"form-select\"></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"operador\" class=\"form-label\">Operador:</label>\n        <select id=\"operador\" name=\"operador\" class=\"form-select\"></select>\n      </div>\n      <button id=\"btn-enviar\" type=\"submit\" class=\"btn btn-success\">Enviar</button>\n    </form>\n  </div>\n\n  <!-- Modal de confirmação -->\n  <div id=\"modal-confirm\">\n    <div class=\"modal-box\">\n      <div style=\"font-weight: bold; margin-bottom:10px;\">Confirmação</div>\n      <div style=\"margin-bottom:20px;\">Tem certeza que deseja abrir o chamado?</div>\n      <button id=\"modal-confirm-ok\" class=\"btn btn-success me-2\">Confirmar</button>\n      <button id=\"modal-confirm-cancel\" class=\"btn btn-success\">Cancelar</button>\n    </div>\n  </div>\n\n  <!-- Loader Bootstrap -->\n  <div id=\"form-loader\" style=\"display: none; position: fixed; top:0; left:0; right:0; bottom:0; background: rgba(255,255,255,0.7); z-index: 99999; align-items: center; justify-content: center;\">\n    <div class=\"d-flex flex-column align-items-center\">\n      <div class=\"spinner-border text-success\" role=\"status\" style=\"width: 3rem; height: 3rem;\">\n        <span class=\"visually-hidden\">Carregando...</span>\n      </div>\n      <div style=\"margin-top: 16px; color: #198754;\">Enviando formulário...</div>\n    </div>\n  </div>\n\n<script>\n  let operadoresData = [];\n  let causasData = [];\n\n  async function getCauses() {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          event: 'get-causes'\n        })\n      });\n      const data = await response.json()\n    \n      causesData = data\n      const selectCausa = document.getElementById('fcrCausa');\n      selectCausa.innerHTML = '<option value=\"\"></option>';\n      \n      data.forEach(item => {\n        const option = document.createElement('option');\n        option.value = item.causa || item;\n        option.textContent = item.causa || item;\n        selectCausa.appendChild(option);\n      });\n  \n    } catch (error) {\n      console.error('Erro ao buscar causas:', error);\n    }\n  }\n  \n  async function getApplicants(){\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          'event': 'get-applicants-list',\n          'number': '{{ $json.query.number }}'\n        })\n      });\n\n      if (!response.ok) throw new Error('Erro ao buscar lista');\n\n      const data = await response.json(); // Array de strings\n      console.log(\"Solicitantes:\", data);\n\n      const selectSolicitante = document.getElementById('solicitante');\n      selectSolicitante.innerHTML = '<option value=\"\"></option>' // limpa opções anteriores\n\n      data.forEach(item => {\n        const displayName = `${item.cliente} - ${item.nome_completo}`;\n        const option = document.createElement('option');\n        option.value = displayName;\n        option.textContent = displayName;\n        \n        option.dataset.cliente = item.cliente;\n        option.dataset.nome = item.nome_completo;\n        option.dataset.solicitanteId = item.chave_solicitante\n    \n        selectSolicitante.appendChild(option);\n      });\n\n    } catch (error) {\n      console.error('Erro ao buscar dados:', error);\n    }\n  }\n  async function getCategories(nomeSolicitante, solicitanteId) {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          'event': 'get-categories-list',\n          'name': nomeSolicitante,\n          'number': '{{ $json.query.number }}',\n          'solicitanteId': solicitanteId\n        })\n      });\n\n      if (!response.ok) throw new Error('Erro ao buscar lista');\n\n      const data = await response.json();\n      // console.log(\"Categorias recebidas:\", data);\n\n      const selectAssunto = document.getElementById('assunto');\n      selectAssunto.innerHTML = '<option value=\"\"></option>'\n\n      data.forEach(categoria => {\n        const option = document.createElement('option');\n        option.value = categoria;\n        option.textContent = categoria;\n        selectAssunto.appendChild(option);\n      });\n\n    } catch (error) {\n      console.error('Erro ao buscar dados:', error);\n    }\n  }\n\n  async function getSubcategorias(assuntoId) {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          event: 'get-subcategories-list',\n          assuntoId: assuntoId\n        })\n      });\n  \n      if (!response.ok) throw new Error('Erro ao buscar subcategorias');\n      const data = await response.json();\n      // console.log(data)\n      const subcategorias = data\n  \n      const selectSubcategoria = document.getElementById('subcategoria');\n      selectSubcategoria.innerHTML = '<option value=\"\"></option>';\n  \n      subcategorias.forEach(sub => {\n        const option = document.createElement('option');\n        option.value = sub;\n        option.textContent = sub;\n        selectSubcategoria.appendChild(option);\n      });\n  \n    } catch (error) {\n      console.error('Erro ao carregar subcategorias:', error);\n    }\n}\n\nasync function getTipos(assunto, subcategoria) {\n  try {\n    const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        event: 'get-types-list',\n        assunto: assunto,\n        subcategoria: subcategoria\n      })\n    });\n\n    if (!response.ok) throw new Error('Erro ao buscar tipos');\n    const data = await response.json();\n\n    // console.log(data)\n    const tipos = data;\n\n    const selectTipo = document.getElementById('tipo');\n    selectTipo.innerHTML = '<option value=\"\"></option>';\n\n    tipos.forEach(tipo => {\n      const option = document.createElement('option');\n      option.value = tipo;\n      option.textContent = tipo;\n      selectTipo.appendChild(option);\n    });\n\n  } catch (error) {\n    console.error('Erro ao carregar tipos:', error);\n  }\n}\n\nasync function getGroupsAndOperators() {\n  try {\n    const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        event: 'get-operators-list'\n      })\n    });\n\n    if (!response.ok) throw new Error('Erro ao buscar operadores e grupos');\n\n    const data = await response.json();\n    operadoresData = data;\n    // console.log(\"Operadores e grupos:\", data);\n\n    preencherOperadores(operadoresData);\n\n    const gruposUnicos = [...new Set(data.map(op => op.grupo))];\n    const selectGrupo = document.getElementById('grupo');\n    selectGrupo.innerHTML = '';\n\n    gruposUnicos.forEach(grupo => {\n      const option = document.createElement('option');\n      option.value = grupo;\n      option.textContent = grupo;\n      selectGrupo.appendChild(option);\n    });\n\n    const setor = '{{ $json.query.setor }}';\n    if (setor) {\n      for (let i = 0; i < selectGrupo.options.length; i++) {\n        if (selectGrupo.options[i].value === setor) {\n          selectGrupo.selectedIndex = i;\n          break;\n        }\n      }\n      selectGrupo.dispatchEvent(new Event('change'));\n    }\n\n  } catch (error) {\n    console.error('Erro ao carregar operadores e grupos:', error);\n  }\n}\n\nfunction preencherOperadores(operadores) {\n  const selectOperador = document.getElementById('operador');\n  selectOperador.innerHTML = '<option value=\"\"></option>';\n  operadores.forEach(op => {\n    const option = document.createElement('option');\n    option.value = op.nome_completo;\n    option.textContent = op.nome_completo;\n    selectOperador.appendChild(option);\n  });\n}\n\n  document.addEventListener('DOMContentLoaded', () => {\n    getGroupsAndOperators()\n    getApplicants()\n\n    document.getElementById('firstCallResolution').addEventListener('change', function () {\n      const campoCausa = document.getElementById('campo-fcr-causa');\n      const campoObs = document.getElementById('campo-fcr-obs');\n      const selectCausa = document.getElementById('fcrCausa');\n      const textareaObs = document.getElementById('fcrObservacao');\n      \n      if (this.checked) {\n        campoCausa.style.display = 'block';\n        campoObs.style.display = 'block';\n        selectCausa.required = true;\n        textareaObs.required = true;\n        \n        if (causasData.length === 0) {\n          getCauses();\n        }\n      } else {\n        campoCausa.style.display = 'none';\n        campoObs.style.display = 'none';\n        selectCausa.required = false;\n        textareaObs.required = false;\n        selectCausa.value = '';\n        textareaObs.value = '';\n      }\n    });\n\n    document.getElementById('solicitante').addEventListener('change', function () {\n      const selectedOption = this.options[this.selectedIndex];\n    \n      const cliente = selectedOption.dataset.cliente || '';\n      const nome = selectedOption.dataset.nome || '';\n      const solicitanteId = selectedOption.dataset.solicitanteId || '';\n    \n      document.getElementById('cliente').value = cliente;\n      document.getElementById('nomeSolicitante').value = nome;\n      document.getElementById('solicitanteId').value = solicitanteId;\n    \n      if (cliente && nome) {\n        getCategories(`${cliente} - ${nome}`, solicitanteId);\n      }\n    });\n\n\n    document.getElementById('assunto').addEventListener('change', function () {\n      const categoriaSelecionada = this.value;\n      getSubcategorias(categoriaSelecionada);\n    });\n\n    document.getElementById('subcategoria').addEventListener('change', function () {\n      const assuntoSelecionado = document.getElementById('assunto').value;\n      const subcategoriaSelecionada = this.value;\n      getTipos(assuntoSelecionado, subcategoriaSelecionada);\n    });\n\n  document.getElementById('grupo').addEventListener('change', function () {\n    const grupoSelecionado = this.value;\n    if (grupoSelecionado) {\n      const filtrados = operadoresData.filter(op => op.grupo === grupoSelecionado);\n      preencherOperadores(filtrados);\n    } else {\n      preencherOperadores(operadoresData);\n    }\n})\n\n    document.getElementById('btn-enviar').addEventListener('click', function (e) {\n      e.preventDefault();\n      const form = document.getElementById('form-atendimento');\n      if (form.reportValidity()) {\n        document.getElementById('modal-confirm').style.display = 'flex';\n      }\n    });\n    \n    // Eventos dos botões do modal\n    document.getElementById('modal-confirm-ok').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n      document.getElementById('form-loader').style.display = 'flex';\n      setTimeout(() => {\n        document.getElementById('form-atendimento').submit();\n      }, 150);\n    });\n    document.getElementById('modal-confirm-cancel').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n    });\n\n  });\n</script>\n\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-544,192],"id":"049c4d08-c4e2-4ab8-8ec4-c1e03be729fb","name":"HTML2"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,192],"id":"251da37c-3775-47c5-9104-3cb73de7f387","name":"Respond to Webhook5"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Primeira Extensão</title>\n\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\n        rel=\"stylesheet\"\n        integrity=\"sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD\"\n        crossorigin=\"anonymous\">\n\n  <script src=\"https://fileschat.sfo2.cdn.digitaloceanspaces.com/public/libs/wlclient.js\"></script>\n\n  <style>\n    html, body {\n      margin: 0;\n      padding: 0;\n      height: auto;\n      min-height: 100%;\n      overflow-x: hidden;\n      /* overflow-y: auto; */\n    }\n    iframe {\n      height: calc(100vh - 60px);\n      width: 100%;\n      border: none;\n      /* height: 95vh;\n      overflow: hidden; */\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container p-2 pb-0\">\n    <div class=\"d-flex gap-2 mb-2\">\n      <button id=\"btn-chamado\" class=\"btn btn-success flex-fill\">Chamado</button>\n      <button id=\"btn-interacao\" class=\"btn btn-outline-primary flex-fill\">Interação</button>\n    </div>\n  </div>\n\n  <iframe id=\"form-frame\" src=\"\" style=\"display:none;\"></iframe>\n\n  <script>\n    const urlFormChamado   = \"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0\";\n    const urlFormInteracao = \"https://n8n.systemway.com.vc/webhook/ac8b649c-2328-4289-a979-b939f4c68f92\";\n\n    function getParams(attendance) {\n      return attendance\n        ? `?name=${encodeURIComponent(attendance.contato.nome)}&chatId=${encodeURIComponent(attendance.atendimentoId)}&number=${encodeURIComponent(attendance.contato.numero)}&setor=${encodeURIComponent(attendance.setor.nome)}`\n        : \"\";\n    }\n\n    let currentAttendance = null;\n\n    function updateIframe(url) {\n      const params = getParams(currentAttendance);\n      document.getElementById('form-frame').src = url + params;\n    }\n\n    function setActiveButton(tipo) {\n      const btnChamado   = document.getElementById('btn-chamado');\n      const btnInteracao = document.getElementById('btn-interacao');\n      if (tipo === 'chamado') {\n        btnChamado.className   = \"btn btn-success flex-fill\";\n        btnInteracao.className = \"btn btn-outline-primary flex-fill\";\n      } else {\n        btnChamado.className   = \"btn btn-outline-success flex-fill\";\n        btnInteracao.className = \"btn btn-primary flex-fill\";\n      }\n    }\n\n    document.getElementById('btn-chamado').onclick = () => {\n      updateIframe(urlFormChamado);\n      setActiveButton('chamado');\n    };\n\n    document.getElementById('btn-interacao').onclick = () => {\n      updateIframe(urlFormInteracao);\n      setActiveButton('interacao');\n    };\n\n    window.WlExtension.initialize({\n      events: {\n        onOpenAttendance: (attendance) => {\n          currentAttendance = attendance;\n          document.getElementById('form-frame').style.display = 'block';\n          // console.log(attendance)\n          updateIframe(urlFormChamado);\n          setActiveButton('chamado');\n        }\n      }\n    });\n\n    window.onload = () => {\n      document.getElementById('form-frame').style.display = 'none';\n    };\n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-544,16],"id":"5e49aa48-102d-40cf-a954-ae5c4fcf8f47","name":"HTML3"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,16],"id":"4ce0e5a0-166f-4f79-b659-dd814e436acd","name":"Respond to Webhook6"},{"parameters":{"path":"integration-stwchat","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-784,16],"id":"4805b9ec-0493-4099-8d92-68b6fec684e4","name":"integration","webhookId":"24319931-8769-47ec-a867-dc6062690ab9"},{"parameters":{"content":"## Consulta ao banco de dados e a API do DeskManager","height":1568,"width":1360,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1280,576],"id":"810da71c-e7d4-443e-989d-37c6d77175b3","name":"Sticky Note"},{"parameters":{"operation":"executeQuery","query":"select nome_completo, grupo from OPERADORES_DESK","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,1120],"id":"14aa94bd-2dec-4583-8e6f-907545b270c4","name":"MySQL","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,1120],"id":"86976649-300e-4184-b4b6-9f1e98c1830f","name":"Respond to Webhook2"},{"parameters":{"jsCode":"const bodyData = $('form-response-chamado').first().json.body;\nconst chaveSolicitante = bodyData.solicitanteId;\nconst chaveAutocategoria = $('Merge').first().json.chaveAutoCategoria;\nconst chaveOperador = $('Merge').first().json.chaveOperador;\nconst chaveGrupo = $('Merge').first().json.chaveGrupo;\nconst causa = $('Merge').first().json.causa_id\nconst token = JSON.parse($input.first().json.data);\nconst isFirstCall = bodyData.firstCallResolution\nconst descFirstCall = bodyData.fcrObservacao\n\nasync function fetchChatMessages(chatId) {\n  const requestOptions = {\n    url: `https://api.stw.chat/core/v2/api/chats/${chatId}`,\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'access-token': '689a61a95706d77b7eb722cb'\n    }\n  };\n\n  const response = await this.helpers.httpRequest(requestOptions);\n  return response.messages || [];\n}\n\nfunction formatDescricao(messages) {\n  return messages\n    .filter(msg => !msg.isSystemMessage && !msg.isPrivate)\n    .map(msg => {\n      const remetente = msg.isSentByMe ? 'Técnico' : msg.senderName;\n      const date = new Date(msg.dhMessage || msg.utcDhMessage);\n      const dataHorario = date.toLocaleString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n\n      if (msg.dataMedia && msg.dataMedia.urlFile && msg.dataMedia.mimetype) {\n        const tipo = (msg.dataMedia.mimetype.split('/')[1] || 'arquivo');\n        const nome = msg.dataMedia.filename || 'arquivo';\n        return `[${dataHorario}] ${remetente}:\\n[${tipo}] ${nome} - ${msg.dataMedia.urlFile}`;\n      }\n      return `[${dataHorario}] ${remetente}:\\n${msg.text || ''}`;\n    })\n    .join('\\n\\n');\n}\n\nasync function downloadAsBase64(url) {\n  const response = await this.helpers.request({\n    method: 'GET',\n    url: url,\n    encoding: null\n  });\n  return Buffer.from(response).toString('base64');\n}\n\nasync function openTicket(descricao) {\n  const tChamadoBody = {\n    Solicitante: chaveSolicitante,\n    AutoCategoria: chaveAutocategoria,\n    Solicitacao: \"000060\",\n    Descricao: descricao,\n    ObservacaoInterna: bodyData.obsInterna || \"\",\n    TransfCodGrupo: chaveGrupo || \"\",\n    TransfCodOperador: chaveOperador || \"\",\n    \n    ...(isFirstCall && {\n      FirstCall: \"S\",\n      FCDescricaoFinalizacao: descFirstCall || \"\",\n      FCFormaAtendimento: \"000030\",\n      FCCausa: causa || \"\"\n    })\n  };\n  const options = {\n    url: 'https://api.desk.ms/ChamadosSuporte',\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': token\n    },\n    body: {\n      TChamado: tChamadoBody\n    },\n    json: true\n  };\n\n  return await this.helpers.httpRequest(options);\n}\n\nasync function enviarAnexo(anexo, chamado) {\n  const request = {\n    url: \"https://files.desk.ms/v1/enviar\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"chamado\": chamado,\n      \"base64\": anexo.base64,\n      \"type\": anexo.mimetype,\n      \"name\": anexo.filename\n    }\n  };\n  const response = await this.helpers.httpRequest(request);\n  return response;\n}\n\nasync function sendSuccesfullMessage(ticket){\n  const options = {\n    url: 'https://api.stw.chat/core/v2/api/chats/send-text',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'access-token': \"689a61a95706d77b7eb722cb\"\n    },\n    body: {\n      \"forceSend\": true,\n      \"isWhisper\": false,\n      \"message\": `Chamado criado com sucesso!\\nO número do seu chamado é: ${ticket}`,\n      \"number\": bodyData.number,\n      \"verifyContact\": false\n    },\n    json: true\n  };\n\n  return await this.helpers.httpRequest(options);\n}\n\nconst chatId = bodyData.chatId;\nconst messages = await fetchChatMessages(chatId);\nconst descricao = formatDescricao(messages);\nconst chamadoResponse = await openTicket(descricao);\nconst chamado = chamadoResponse[0]\nconst sendMessage = await sendSuccesfullMessage(chamado)\n\nconst anexos = [];\nfor (const msg of messages) {\n  if (msg.dataMedia && msg.dataMedia.urlFile) {\n    const base64 = await downloadAsBase64.call(this, msg.dataMedia.urlFile);\n    anexos.push({\n      base64: base64,\n      filename: msg.dataMedia.filename || 'anexo',\n      mimetype: msg.dataMedia.mimetype || 'application/octet-stream'\n    });\n  }\n}\n\nconst anexosResultados = [];\nfor (const anexo of anexos) {\n  if (chamado) {\n    const resultado = await enviarAnexo(anexo, chamado);\n    anexosResultados.push(resultado);\n  }\n}\n\nreturn [{\n  json: {\n    descricao,\n    chamado: chamadoResponse,\n    anexosEnviados: anexosResultados,\n    sendMessage\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2224,1072],"id":"35dec29b-6910-435d-8e3c-d5f031ea0b75","name":"Code2"},{"parameters":{"operation":"executeQuery","query":"select chave as chaveAutoCategoria from AUTO_CATEGORIA_DESK where assunto_completo = '{{ $json.body.assunto }} - {{ $json.body.subcategoria }} - {{ $json.body.tipo }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,784],"id":"c0a14a2a-5b1c-42a0-8e76-2ab928fb51a4","name":"autocategoriaCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select chave as chaveOperador from OPERADORES_DESK where nome_completo = '{{ $json.body.operador }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,976],"id":"a412f652-b8b3-47f4-824f-5a40472ea8d2","name":"operadorCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[-1552,1072],"id":"53c48bf2-17b4-4dbb-b49f-7adffb40a0ee","name":"Respond to Webhook7"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":4,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-2672,1040],"id":"d81809cd-0b88-4334-a83a-60c4393b612c","name":"Merge"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,1296],"id":"2ebeaa28-8683-4081-a1b7-d7cd8198131f","name":"Respond to Webhook8"},{"parameters":{"method":"POST","url":"https://api.desk.ms/Login/autenticar","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"3c6a9bc092a7386d6485a2fba65b48849c8b5647"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2448,1072],"id":"0e6fbca8-5cfc-43bb-94cb-303df12e6160","name":"getToken3"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,384],"id":"898d5f68-ac7c-4949-b676-79983e4b8886","name":"Respond to Webhook9"},{"parameters":{"html":"<!DOCTYPE html>\n<html lang=\"pt\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Interação no Chamado</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n  <style>\n    body {\n      background: #f9f9f9;\n      color: #333;\n      padding-bottom: 80px;\n    }\n    .form-container {\n      max-width: 400px;\n      background: #fff;\n      border-radius: 10px;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.07);\n      margin: 32px auto 0 auto;\n      padding: 24px;\n    }\n    #modal-confirm {\n      display: none;\n      position: fixed; \n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.3);\n      align-items: center; \n      justify-content: center; \n      z-index: 9999;\n    }\n    #modal-confirm .modal-box {\n      background: white;\n      padding: 24px 18px;\n      border-radius: 10px;\n      min-width: 250px;\n      text-align: center;\n      box-shadow: 0 2px 16px rgba(0,0,0,0.18);\n    }\n  </style>\n</head>\n<body>\n  <div class=\"form-container\">\n    <form id=\"form-interacao\" action=\"https://n8n.systemway.com.vc/webhook/1cf835b4-5339-4a22-9cf9-d124d75f437a\" method=\"POST\">\n      <input type=\"hidden\" id=\"chatId\" name=\"chatId\" value=\"{{ $json.query.chatId }}\">\n      <div class=\"mb-3\">\n        <label for=\"chamados\" class=\"form-label\">Chamados:</label>\n        <select id=\"chamados\" name=\"chamados\" class=\"form-select\" required>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"status\" class=\"form-label\">Status:</label>\n        <select id=\"status\" name=\"status\" class=\"form-select\" required>\n        </select>\n      </div>\n      <div id=\"campo-causa\" class=\"mb-3\" style=\"display:none;\">\n        <label for=\"causa\" class=\"form-label\">Causa da Resolução:</label>\n        <select id=\"causa\" name=\"causa\" class=\"form-select\"></select>\n      </div>\n      \n      <div class=\"mb-3\">\n        <label for=\"obsInterna\" class=\"form-label\">Observação Interna:</label>\n        <textarea id=\"obsInterna\" name=\"obsInterna\" class=\"form-control\" rows=\"4\" placeholder=\"Descreva o problema ...\"></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"grupo\" class=\"form-label\">Grupo:</label>\n        <select id=\"grupo\" name=\"grupo\" class=\"form-select\"></select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"operador\" class=\"form-label\">Operador:</label>\n        <select id=\"operador\" name=\"operador\" class=\"form-select\"></select>\n      </div>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"btn-enviar\">Enviar</button>\n    </form>\n  </div>\n  <div id=\"modal-confirm\">\n    <div class=\"modal-box\">\n      <div style=\"font-weight: bold; margin-bottom:10px;\">Confirmação</div>\n      <div style=\"margin-bottom:20px;\">Tem certeza que deseja criar a interação?</div>\n      <button id=\"modal-confirm-ok\" class=\"btn btn-success me-2\">Confirmar</button>\n      <button id=\"modal-confirm-cancel\" class=\"btn btn-danger\">Cancelar</button>\n    </div>\n  </div>\n  <div id=\"form-loader\" style=\"display: none; position: fixed; top:0; left:0; right:0; bottom:0; background: rgba(255,255,255,0.7); z-index: 99999; align-items: center; justify-content: center;\">\n    <div class=\"d-flex flex-column align-items-center\">\n      <div class=\"spinner-border text-primary\" role=\"status\" style=\"width: 3rem; height: 3rem;\">\n        <span class=\"visually-hidden\">Carregando...</span>\n      </div>\n      <div style=\"margin-top: 16px; color: #0d6efd;\">Enviando interação...</div>\n    </div>\n  </div>\n\n  <script>\n    let operadoresData = [];   \n    let causasData = [];\n\n    async function getCauses() {\n      try {\n        const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            event: 'get-causes'\n          })\n        });\n        \n        if (!response.ok) throw new Error('Erro ao buscar causas');\n        \n        const data = await response.json();\n        console.log('Causas recebidas:', data);\n      \n        causasData = data;\n        const selectCausa = document.getElementById('causa');\n        selectCausa.innerHTML = '<option value=\"\"></option>';\n        \n        data.forEach(item => {\n          console.log('Processando causa:', item);\n          const option = document.createElement('option');\n          option.value = item.causa;\n          option.textContent = item.causa;\n          selectCausa.appendChild(option);\n        });\n        \n        console.log('Total de causas adicionadas:', data.length);\n    \n      } catch (error) {\n        console.error('Erro ao buscar causas:', error);\n      }\n    }\n\n    \n    async function getOpenTickets(){\n      try {\n        const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            'event': 'get-open-tickets',\n            'number': '{{ $json.query.number }}'\n          })\n        });\n  \n        if (!response.ok) throw new Error('Erro ao buscar lista')\n  \n        const data = await response.json()\n        console.log(\"Dados Chamados em Aberto: \", data)\n\n        const chamadosValidos = data.filter(item => Object.keys(item).length > 0)\n        const selectChamados = document.getElementById('chamados')\n        selectChamados.innerHTML = ''; // Limpa tudo\n        \n        if (chamadosValidos.length === 0) {\n          selectChamados.innerHTML = '<option value=\"\">Nenhum chamado em aberto</option>';\n          selectChamados.disabled = true;\n        } else {\n          selectChamados.disabled = false;\n          const option = document.createElement('option');\n          option.value = '';\n          option.textContent = '';\n          selectChamados.appendChild(option);\n    \n          data.forEach(item => {\n            const option = document.createElement('option');\n            option.value = item.chamado;\n            option.textContent = item.chamado;\n            selectChamados.appendChild(option);\n          });\n        }\n  \n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n    \n    async function getStatus(){\n      try {\n        const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            'event': 'get-status'\n          })\n        });\n  \n        if (!response.ok) throw new Error('Erro ao buscar lista');\n  \n        const data = await response.json();\n        \n        const selectStatus = document.getElementById('status');\n        selectStatus.innerHTML = '<option value=\"\"></option>'\n  \n        data.forEach(item => {\n          const option = document.createElement('option');\n          option.value = item.status;\n          option.textContent = item.status;\n          selectStatus.appendChild(option);\n        });\n  \n      } catch (error) {\n        console.error('Erro ao buscar dados:', error);\n      }\n    }\n\n  async function getGroupsAndOperators() {\n    try {\n      const response = await fetch('https://n8n.systemway.com.vc/webhook/proxy-integration-desk', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          event: 'get-operators-list'\n        })\n      });\n  \n      if (!response.ok) throw new Error('Erro ao buscar operadores e grupos');\n  \n      const data = await response.json();\n      operadoresData = data;\n      // console.log(\"Operadores e grupos:\", data);\n  \n      preencherOperadores(operadoresData);\n  \n      const gruposUnicos = [...new Set(data.map(op => op.grupo))];\n      const selectGrupo = document.getElementById('grupo');\n      selectGrupo.innerHTML = '<option value=\"\"></option>';\n  \n      gruposUnicos.forEach(grupo => {\n        const option = document.createElement('option');\n        option.value = grupo;\n        option.textContent = grupo;\n        selectGrupo.appendChild(option);\n      });\n  \n    } catch (error) {\n      console.error('Erro ao carregar operadores e grupos:', error);\n    }\n  }\n\n  function preencherOperadores(operadores) {\n    const selectOperador = document.getElementById('operador');\n    selectOperador.innerHTML = '<option value=\"\"></option>';\n    operadores.forEach(op => {\n      const option = document.createElement('option');\n      option.value = op.nome_completo;\n      option.textContent = op.nome_completo;\n      selectOperador.appendChild(option);\n    });\n  }\n\n  function toggleCausaField() {\n    const statusSelect = document.getElementById('status');\n    const campoCausa = document.getElementById('campo-causa');\n    const causaSelect = document.getElementById('causa');\n    \n    const statusSelecionado = statusSelect.value.toLowerCase();\n    \n    if (statusSelecionado === 'resolvido') {\n      campoCausa.style.display = 'block';\n      causaSelect.required = true;\n      \n      // Carrega as causas se ainda não foram carregadas\n      if (causasData.length === 0) {\n        getCauses();\n      }\n    } else {\n      campoCausa.style.display = 'none';\n      causaSelect.required = false;\n      causaSelect.value = '';\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', () => {\n    getStatus();\n    getGroupsAndOperators();\n    getOpenTickets()\n\n    document.getElementById('status').addEventListener('change', toggleCausaField);\n\n    document.getElementById('grupo').addEventListener('change', function () {\n      const grupoSelecionado = this.value;\n      if (grupoSelecionado) {\n        const filtrados = operadoresData.filter(op => op.grupo === grupoSelecionado);\n        preencherOperadores(filtrados);\n      } else {\n        preencherOperadores(operadoresData);\n      }\n    });\n\n    document.getElementById('btn-enviar').addEventListener('click', function (e) {\n      e.preventDefault();\n      const form = document.getElementById('form-interacao');\n      if (form.reportValidity()) {\n        document.getElementById('modal-confirm').style.display = 'flex';\n      }\n    });\n    \n    // Eventos dos botões do modal\n    document.getElementById('modal-confirm-ok').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n      document.getElementById('form-loader').style.display = 'flex';\n\n      setTimeout(() => {\n        document.getElementById('form-interacao').submit();\n      }, 150);\n    });\n    document.getElementById('modal-confirm-cancel').addEventListener('click', function () {\n      document.getElementById('modal-confirm').style.display = 'none';\n    });\n\n  });\n    \n  </script>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-544,384],"id":"20837d01-59e8-41c8-a0f2-63e949e19f7f","name":"HTML"},{"parameters":{"path":"a02c4e89-ce02-4c3e-bd21-9d49f69b1af0","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-784,192],"id":"8dc43fc5-6705-4559-820b-228b5bdc13ac","name":"form-stwchat-chamado","webhookId":"f76c7e9c-f6fc-4666-aa76-bee0fd3e729e"},{"parameters":{"path":"ac8b649c-2328-4289-a979-b939f4c68f92","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-784,384],"id":"0080514e-7a84-46bf-bcbe-522ba8c64c60","name":"form-stwchat-interacao","webhookId":"ac8b649c-2328-4289-a979-b939f4c68f92"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,1456],"id":"3a2f7520-edbb-4ea3-b035-3d69ec3d5a51","name":"Respond to Webhook10"},{"parameters":{"httpMethod":"POST","path":"749c4c10-156f-4044-845f-a7b1bc4c55a2","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-3120,1072],"id":"2eb424d9-07b8-4e97-8c56-7bd3819f1e51","name":"form-response-chamado","webhookId":"749c4c10-156f-4044-845f-a7b1bc4c55a2"},{"parameters":{"httpMethod":"POST","path":"1cf835b4-5339-4a22-9cf9-d124d75f437a","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-3120,1872],"id":"9cac0742-5581-49ca-87f5-5c87a33c69b3","name":"form-response-interacao","webhookId":"1cf835b4-5339-4a22-9cf9-d124d75f437a"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.html }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[-1552,1872],"id":"4f3334da-34dd-4031-8a89-4f76f4c863e9","name":"Respond to Webhook11"},{"parameters":{"operation":"executeQuery","query":"select distinct empresa_nome from GRUPO_EMPRESAS_DESK where empresa_id in (select codigo_cliente from SOLICITANTES_DESK where telefone = {{ $('RequestDesk').item.json.body.number }})","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,1792],"id":"c24ed4d0-5559-4cb0-aa0a-78cbfee2c0b0","name":"MySQL6","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-128,1888],"id":"be087b3f-78a5-4023-919b-c1abbd538519","name":"Respond to Webhook12"},{"parameters":{"jsCode":"const token = $('getToken').item.json.data;\nconst empresas = $input.all().filter(item => !!item.json.empresa_nome);\n\nif (empresas.length === 0) {\n  // Nenhuma empresa encontrada, retorna array vazio!\n  return [];\n}\n\nconst promessas = empresas.map(item => {\n  const grupoNome = item.json.empresa_nome;\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": grupoNome,\n      \"Ativo\": \"EmAberto\"\n    }\n  };\n\n  return this.helpers.httpRequest(request)\n    .then(response => response.root || []);\n});\n\nconst resultados = await Promise.all(promessas);\n\nconst chamadosTotal = [].concat(...resultados);\n\nreturn chamadosTotal.map(item => ({\n  json: {\n    chamado: `${item.CodChamado} - ${item.Assunto}`\n  }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-336,1968],"id":"e609a5c0-9246-4c0e-83ea-91eb39f03c82","name":"Code9","alwaysOutputData":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"72d9d7d3-11b5-4fc2-affa-a649f515a372","leftValue":"={{ $json.empresa_nome }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-336,1792],"id":"609a41ab-11f6-4568-b80b-029d342c14f0","name":"If"},{"parameters":{"operation":"executeQuery","query":"select distinct cliente as empresa_nome FROM SOLICITANTES_DESK where telefone = '{{ $('RequestDesk').item.json.body.number }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,1968],"id":"97097664-e88c-459d-895d-8d3c1dcfe54c","name":"MySQL7","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"jsCode":"const token = JSON.parse($input.first().json.data);\nconst bodyData = $('form-response-interacao').first().json.body\nconst chamadoStr = bodyData.chamados || bodyData.chamadoManual;\nconst chamado = chamadoStr.split(\" - \")[0].trim();\nconst status = $('Merge1').first().json.chave_status\nconst transferirOperadorForm = $('Merge1').first().json.transferirOperador;\nconst transferirGrupoForm = $('Merge1').first().json.transferirGrupo;\nconst causa = $('Merge1').first().json.causa_id\n\nasync function fetchChatMessages(chatId) {\n  const requestOptions = {\n    url: `https://api.stw.chat/core/v2/api/chats/${chatId}`,\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'access-token': '689a61a95706d77b7eb722cb'\n    }\n  };\n\n  const response = await this.helpers.httpRequest(requestOptions);\n  return response.messages || [];\n}\n\nfunction formatDescricao(messages) {\n  return messages\n    .filter(msg => !msg.isSystemMessage && !msg.isPrivate)\n    .map(msg => {\n      const remetente = msg.isSentByMe ? 'Técnico' : msg.senderName;\n      const date = new Date(msg.dhMessage || msg.utcDhMessage);\n      const dataHorario = date.toLocaleString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n      \n      if (msg.dataMedia && msg.dataMedia.urlFile && msg.dataMedia.mimetype) {\n        const tipo = (msg.dataMedia.mimetype.split('/')[1] || 'arquivo');\n        const nome = msg.dataMedia.filename || 'arquivo';\n        return `[${dataHorario}] ${remetente}:\\n[${tipo}] ${nome} - ${msg.dataMedia.urlFile}`;\n      }\n      return `[${dataHorario}] ${remetente}:\\n${msg.text || ''}`;\n    })\n    .join('\\n\\n');\n}\n\nasync function downloadAsBase64(url) {\n  const response = await this.helpers.request({\n    method: 'GET',\n    url: url,\n    encoding: null\n  });\n  return Buffer.from(response).toString('base64');\n}\n\nasync function getOperatorInfo(){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": chamado,\n      \"Colunas\": {\n        \"NomeOperador\":\"on\",\n        \"SobrenomeOperador\":\"on\",\n        \"SequenciaGrupo\": \"on\"\n      }\n    }\n  }\n  const response = await this.helpers.httpRequest(request);  \n  const ticket = response.root[0];\n  const nome = ticket?.NomeOperador || \"\";\n  const sobrenome = ticket?.SobrenomeOperador || \"\";\n  const nomeCompleto = [nome, sobrenome].filter(Boolean).join(\" \").trim();\n  const sequenciaGrupo = ticket?.SequenciaGrupo || \"\";\n  return { nomeCompleto, sequenciaGrupo };\n}\n\nasync function getOperatorId(fullName){\n  const request = {\n    url: \"https://api.desk.ms/Operadores/lista\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Pesquisa\": fullName,\n      \"Ativo\": \"S\"\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request)\n  return response.root[0]?.Chave\n}\n\nasync function interactTicket(fields){\n  const request = {\n    url: \"https://api.desk.ms/ChamadosSuporte/interagir\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"Chave\": chamado,\n      \"TChamado\":{\n        \"CodFormaAtendimento\": \"000004\",\n        \"CodStatus\": status,\n        ...(fields.transferirOperador && { \"TransferirOperador\": fields.transferirOperador }),\n        ...(fields.transferirGrupo && { \"TransferirGrupo\": fields.transferirGrupo }),\n        ...(fields.codOperador && { \"CodOperador\": fields.codOperador }),\n        ...(status === \"000002\" && fields.codCausa && { \"CodCausa\": fields.codCausa }),\n        \"Descricao\": fields.descricao,\n        \"ObservacaoInterna\": bodyData.obsInterna\n      }\n    }\n  }\n\n  const response = await this.helpers.httpRequest(request)\n  return response\n}\n\nasync function enviarAnexo(anexo) {\n  const request = {\n    url: \"https://files.desk.ms/v1/enviar\",\n    method: \"PUT\",\n    headers: {\n      \"Authorization\": token,\n      \"Content-Type\": \"application/json\"\n    },\n    body: {\n      \"chamado\": chamado,\n      \"base64\": anexo.base64,\n      \"type\": anexo.mimetype,\n      \"name\": anexo.filename\n    }\n  }\n  const response = await this.helpers.httpRequest(request);\n  return response;\n}\n\n\nconst chatId = bodyData.chatId;\nconst messages = await fetchChatMessages(chatId);\nconst descricao = formatDescricao(messages);\n\nconst anexos = [];\nfor (const msg of messages) {\n  if (msg.dataMedia && msg.dataMedia.urlFile) {\n    const base64 = await downloadAsBase64.call(this, msg.dataMedia.urlFile);\n    anexos.push({\n      base64: base64,\n      filename: msg.dataMedia.filename || 'anexo',\n      mimetype: msg.dataMedia.mimetype || 'application/octet-stream'\n    });\n  }\n}\n\nlet transferirOperador = transferirOperadorForm || \"\";\nlet transferirGrupo = transferirGrupoForm || \"\";\nlet codOperador = \"\";\nlet operatorInfo = await getOperatorInfo();\n\nif (!transferirOperador && !transferirGrupo) {\n  if (operatorInfo.nomeCompleto) {\n    codOperador = await getOperatorId(operatorInfo.nomeCompleto) || \"\";\n  } else if (operatorInfo.sequenciaGrupo) {\n    transferirGrupo = operatorInfo.sequenciaGrupo;\n  }\n}\n\nconst fields = {\n  transferirOperador,\n  transferirGrupo,\n  codOperador,\n  descricao,\n  codCausa: causa\n};\n\nconst interacao = await interactTicket(fields);\n\nconst anexosResultados = [];\nfor (const anexo of anexos) {\n  const resultado = await enviarAnexo(anexo);\n  anexosResultados.push(resultado);\n}\n\nreturn [{\n  json: {\n    descricao,\n    interacao,\n    anexosEnviados: anexosResultados\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2224,1872],"id":"23972f72-f37f-466a-aafb-802518febdf2","name":"Code10"},{"parameters":{"method":"POST","url":"https://api.desk.ms/Login/autenticar","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"3c6a9bc092a7386d6485a2fba65b48849c8b5647"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"PublicKey\": \"8538469cd13a011c7513f9f53470b0c1748790e5\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2448,1872],"id":"d9dde551-4a39-4d65-aad2-88e06decc573","name":"getToken7"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":4,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-2672,1840],"id":"37ce1f50-65e5-4959-bf7c-c4761d5a243d","name":"Merge1"},{"parameters":{"operation":"executeQuery","query":"select distinct chaveGrupo from OPERADORES_DESK where grupo = '{{ $json.body.grupo }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,1168],"id":"888350b3-32c9-41fe-be41-2772ceb3267a","name":"grupoCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select sequencia as chave_status from STATUS_DESK where status ='{{ $json.body.status }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,1584],"id":"7c6efbe0-9502-40fe-a15d-a9071e1ca69b","name":"statusCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select chave as transferirOperador from OPERADORES_DESK where nome_completo = '{{ $json.body.operador }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,1776],"id":"9ecb2065-b1f6-4989-966a-6271d3c51b71","name":"operadorCod2","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select distinct chaveGrupo as transferirGrupo from OPERADORES_DESK where grupo = '{{ $json.body.grupo }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,1968],"id":"4446d247-e3b8-4731-b531-5fa1e1134f1c","name":"grupoCod1","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a69b4bf5-9510-49ee-bdc8-e8edb5af1365","leftValue":"={{ $json.chamado.erro }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2000,1072],"id":"5814ebc9-8ef3-41fb-ae8f-a0f4d65b2ec7","name":"If1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"3fc0e24b-f7a2-4b2c-842d-da990eba46da","leftValue":"={{ $json.interacao.erro }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2000,1872],"id":"58fabaf2-71a9-4b2d-bb20-5a37f5bad16c","name":"If2"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Erro ao Criar Chamado</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #EDEDED;\n      color: #721c24;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #A6A4A4;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>❌ Erro ao Criar o Chamado</h1>\n    <p>Erro: {{ $json.chamado.erro }}</p>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1776,976],"id":"496a4f1a-65f0-4ef5-ade7-2e0762bc315e","name":"Erro"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Chamado Criado com Sucesso</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #E6FFED;\n      color: #155724;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #C3E6CB;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n    .numero {\n      font-size: 20px;\n      font-weight: bold;\n      color: #0b6623;\n      margin-top: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>✅ Chamado Criado com Sucesso!</h1>\n    <p>O número do seu chamado é:</p>\n    <div class=\"numero\">{{ $json.chamado }}</div>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1776,1168],"id":"765a65d7-7e4e-4be4-a5ae-6c5c20ed4663","name":"Confirmacao"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Erro ao interagir no Chamado</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #EDEDED;\n      color: #721c24;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #A6A4A4;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>❌ Erro ao interagir no chamado</h1>\n    <p>Erro: {{ $json.interacao.erro }}</p>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1776,1776],"id":"922071b8-b64a-420b-a7cf-14c87a19c52b","name":"Erro1"},{"parameters":{"html":"<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Interação criada com Sucesso</title>\n  <style>\n    body {\n      background-color: #FFFFFF;\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n    }\n    .container {\n      background-color: #E6FFED;\n      color: #155724;\n      max-width: 600px;\n      margin: 100px auto;\n      padding: 30px;\n      border: 1px solid #C3E6CB;\n      border-radius: 8px;\n      text-align: center;\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n    }\n    h1 {\n      font-size: 24px;\n      margin-bottom: 10px;\n    }\n    p {\n      font-size: 18px;\n      margin: 0;\n    }\n    .numero {\n      font-size: 20px;\n      font-weight: bold;\n      color: #0b6623;\n      margin-top: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>✅ Interação realizada com Sucesso!</h1>\n  </div>\n</body>\n</html>\n"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[-1776,1968],"id":"6150b837-df9f-4225-8c97-762d3f602740","name":"Confirmacao1"},{"parameters":{},"type":"n8n-nodes-base.errorTrigger","typeVersion":1,"position":[-3120,2432],"id":"95565ff7-4ecc-4186-84ff-1747e9672858","name":"Error Trigger"},{"parameters":{"toRecipients":"vinicius.marotti@systemway.com.br","subject":"Workflow error - STW Chat Integração","bodyContent":"={{ $workflow.name }}\n\nWorkflow error:\nExecution: {{ $json.execution.id }}, {{ $json.execution.url }}\n\nError: {{ $json.execution.error.message }}\n","additionalFields":{}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[-2896,2432],"id":"ede988ff-004e-4c8d-bfb4-3df522d9a535","name":"Microsoft Outlook1","webhookId":"8677b346-34ab-4b42-b63c-c902226cb6ad","credentials":{"microsoftOutlookOAuth2Api":{"id":"FmajLBt0f4q9kfkl","name":"Microsoft Outlook Vinicius Marotti"}}},{"parameters":{"operation":"executeQuery","query":"select status from STATUS_DESK where is_enabled = 1 order by status asc","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,1456],"id":"9e802e44-e1cd-4582-823b-4747ad8f5591","name":"Execute a SQL query","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select distinct categoria from AUTO_CATEGORIA_DESK where categoria <> 'Sem categoria' order by categoria","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,592],"id":"131a7fb1-f3b5-453e-b652-2be2de5074d6","name":"Execute a SQL query1","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select cliente, nome_completo, chave as chave_solicitante from SOLICITANTES_DESK where telefone = {{ $('RequestDesk').item.json.body.number }}\n","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,1296],"id":"f1af58c4-0125-4903-881c-dda9c3ece11e","name":"Execute a SQL query2","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.2,"position":[-336,1616],"id":"9c978b6c-a8de-4990-8e41-0a701bc9ec0d","name":"Respond to Webhook13"},{"parameters":{"operation":"executeQuery","query":"select causa from CAUSAS_DESK","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-544,1616],"id":"cce94782-a0e4-4b10-8556-d0ec048b2afd","name":"Execute a SQL query3","credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select sequence_id as causa_id from CAUSAS_DESK where causa ='{{ $json.body.causa }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,2160],"id":"a9a5bf31-b2e4-48de-9d24-74b94bf7d9ec","name":"causaCod","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}},{"parameters":{"operation":"executeQuery","query":"select sequence_id as causa_id from CAUSAS_DESK where causa ='{{ $json.body.fcrCausa }}'","options":{}},"type":"n8n-nodes-base.mySql","typeVersion":2.4,"position":[-2896,1360],"id":"50bacc34-0810-40c3-a8c8-f72c8ef77f8a","name":"causaCod1","alwaysOutputData":true,"credentials":{"mySql":{"id":"LRSzEWs6gl6bZPI9","name":"MySQL PBI"}}}],"connections":{"Switch":{"main":[[{"node":"Execute a SQL query1","type":"main","index":0}],[{"node":"MySQL3","type":"main","index":0}],[{"node":"MySQL2","type":"main","index":0}],[{"node":"MySQL","type":"main","index":0}],[{"node":"Execute a SQL query2","type":"main","index":0}],[{"node":"Execute a SQL query","type":"main","index":0}],[{"node":"Execute a SQL query3","type":"main","index":0}],[{"node":"MySQL6","type":"main","index":0}]]},"getToken":{"main":[[{"node":"Switch","type":"main","index":0}]]},"RequestDesk":{"main":[[{"node":"getToken","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Respond to Webhook3","type":"main","index":0}]]},"Code4":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"MySQL3":{"main":[[{"node":"Code1","type":"main","index":0}]]},"MySQL2":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Respond to Webhook4","type":"main","index":0}]]},"HTML2":{"main":[[{"node":"Respond to Webhook5","type":"main","index":0}]]},"HTML3":{"main":[[{"node":"Respond to Webhook6","type":"main","index":0}]]},"integration":{"main":[[{"node":"HTML3","type":"main","index":0}]]},"MySQL":{"main":[[{"node":"Respond to Webhook2","type":"main","index":0}]]},"Code2":{"main":[[{"node":"If1","type":"main","index":0}]]},"autocategoriaCod":{"main":[[{"node":"Merge","type":"main","index":0}]]},"operadorCod":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"getToken3","type":"main","index":0}]]},"getToken3":{"main":[[{"node":"Code2","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Respond to Webhook9","type":"main","index":0}]]},"form-stwchat-chamado":{"main":[[{"node":"HTML2","type":"main","index":0}]]},"form-stwchat-interacao":{"main":[[{"node":"HTML","type":"main","index":0}]]},"form-response-chamado":{"main":[[{"node":"autocategoriaCod","type":"main","index":0},{"node":"operadorCod","type":"main","index":0},{"node":"grupoCod","type":"main","index":0},{"node":"causaCod1","type":"main","index":0}]]},"form-response-interacao":{"main":[[{"node":"statusCod","type":"main","index":0},{"node":"operadorCod2","type":"main","index":0},{"node":"grupoCod1","type":"main","index":0},{"node":"causaCod","type":"main","index":0}]]},"MySQL6":{"main":[[{"node":"If","type":"main","index":0}]]},"Code9":{"main":[[{"node":"Respond to Webhook12","type":"main","index":0}]]},"If":{"main":[[{"node":"Code9","type":"main","index":0}],[{"node":"MySQL7","type":"main","index":0}]]},"MySQL7":{"main":[[{"node":"Code9","type":"main","index":0}]]},"getToken7":{"main":[[{"node":"Code10","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"getToken7","type":"main","index":0}]]},"grupoCod":{"main":[[{"node":"Merge","type":"main","index":2}]]},"statusCod":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"operadorCod2":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"grupoCod1":{"main":[[{"node":"Merge1","type":"main","index":2}]]},"Code10":{"main":[[{"node":"If2","type":"main","index":0}]]},"If1":{"main":[[{"node":"Erro","type":"main","index":0}],[{"node":"Confirmacao","type":"main","index":0}]]},"Erro":{"main":[[{"node":"Respond to Webhook7","type":"main","index":0}]]},"Confirmacao":{"main":[[{"node":"Respond to Webhook7","type":"main","index":0}]]},"If2":{"main":[[{"node":"Erro1","type":"main","index":0}],[{"node":"Confirmacao1","type":"main","index":0}]]},"Confirmacao1":{"main":[[{"node":"Respond to Webhook11","type":"main","index":0}]]},"Erro1":{"main":[[{"node":"Respond to Webhook11","type":"main","index":0}]]},"Error Trigger":{"main":[[{"node":"Microsoft Outlook1","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"Respond to Webhook10","type":"main","index":0}]]},"Execute a SQL query1":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Execute a SQL query2":{"main":[[{"node":"Respond to Webhook8","type":"main","index":0}]]},"Execute a SQL query3":{"main":[[{"node":"Respond to Webhook13","type":"main","index":0}]]},"causaCod":{"main":[[{"node":"Merge1","type":"main","index":3}]]},"causaCod1":{"main":[[{"node":"Merge","type":"main","index":3}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{"form-stwchat-chamado":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-encoding":"gzip, br","accept-language":"pt-PT,pt;q=0.9,en-US;q=0.8,en;q=0.7","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"2804:14c:6181:8f4a::6d4f","cf-ipcountry":"BR","cf-ray":"9472c4fa78da01c6-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"cfabca0c-f561-4a2c-af11-2fa01c9d0d35","priority":"u=0, i","referer":"https://app.stw.chat/","sec-ch-ua":"\"Google Chrome\";v=\"137\", \"Chromium\";v=\"137\", \"Not/A)Brand\";v=\"24\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"iframe","sec-fetch-mode":"navigate","sec-fetch-site":"cross-site","sec-fetch-storage-access":"active","sec-fetch-user":"?1","upgrade-insecure-requests":"1","x-forwarded-for":"2804:14c:6181:8f4a::6d4f","x-forwarded-proto":"https"},"params":{},"query":{"name":"Vinicius Marotti","chatId":"6834ac2d06706d21400d3805"},"body":{},"webhookUrl":"https://n8n.systemway.com.vc/webhook/teste2","executionMode":"production"}}],"RequestDesk":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"56","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0","accept":"*/*","accept-encoding":"gzip, br","accept-language":"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"177.47.84.240","cf-ipcountry":"BR","cf-ray":"975563f44a97f24e-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"95f76b35-dd5e-4bd0-ba0c-38bc24a4cc2e","content-type":"application/json","origin":"https://n8n.systemway.com.vc","priority":"u=1, i","referer":"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0?name=Bianca%2FSAF&chatId=68adb1b7a147c67bf062fb60&number=5514996879033&setor=Suporte","sec-ch-ua":"\"Not;A=Brand\";v=\"99\", \"Microsoft Edge\";v=\"139\", \"Chromium\";v=\"139\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin","sec-fetch-storage-access":"active","x-forwarded-for":"177.47.84.240","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"event":"get-causes","number":"5514996879033"},"webhookUrl":"https://n8n.systemway.com.vc/webhook/proxy-integration-desk","executionMode":"production"}}],"form-response-interacao":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"378","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36 Edg/141.0.0.0","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-encoding":"gzip, br","accept-language":"pt-BR,pt;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6,pt-PT;q=0.5","cache-control":"max-age=0","cdn-loop":"cloudflare; loops=1","cf-connecting-ip":"177.143.237.103","cf-ipcountry":"BR","cf-ray":"99637e83ddd8f22d-GRU","cf-visitor":"{\"scheme\":\"https\"}","cf-warp-tag-id":"478622f3-8c9c-477a-a654-038c47ca2744","content-type":"application/x-www-form-urlencoded","origin":"https://n8n.systemway.com.vc","priority":"u=0, i","referer":"https://n8n.systemway.com.vc/webhook/ac8b649c-2328-4289-a979-b939f4c68f92?name=Fabiano%2FHP%20AGRICOLA&chatId=690210a001797ce107b08e8f&number=5514997173468&setor=Suporte","sec-ch-ua":"\"Microsoft Edge\";v=\"141\", \"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"141\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"iframe","sec-fetch-mode":"navigate","sec-fetch-site":"same-origin","sec-fetch-storage-access":"active","sec-fetch-user":"?1","upgrade-insecure-requests":"1","x-forwarded-for":"177.143.237.103","x-forwarded-proto":"https"},"params":{},"query":{},"body":{"chatId":"690210a001797ce107b08e8f","chamados":"1025-001144 - STW Voz - Linha Telefônica - Configurar","status":"Resolvido","causa":"Problema Resolvido","obsInterna":"Verificamos que a comunicação da central local com o circuito em nuvem não estava funcionando. Após o reestabelecimento da comunicação o problema foi resolvido.","grupo":"","operador":"Giovana Vilas Boas"},"webhookUrl":"https://n8n.systemway.com.vc/webhook/1cf835b4-5339-4a22-9cf9-d124d75f437a","executionMode":"production"}}],"form-response-chamado":[{"json":{"headers":{"connection":"upgrade","host":"n8n.systemway.com.vc","content-length":"386","cache-control":"max-age=0","sec-ch-ua":"\"Google Chrome\";v=\"141\", \"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"141\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","origin":"https://n8n.systemway.com.vc","content-type":"application/x-www-form-urlencoded","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","sec-fetch-site":"same-origin","sec-fetch-mode":"navigate","sec-fetch-user":"?1","sec-fetch-dest":"iframe","sec-fetch-storage-access":"active","referer":"https://n8n.systemway.com.vc/webhook/a02c4e89-ce02-4c3e-bd21-9d49f69b1af0?name=Marotti&chatId=68ff7d80027df3cf816cba28&number=5514974009711&setor=Suporte","accept-encoding":"gzip, deflate, br, zstd","accept-language":"pt-PT,pt;q=0.9,en-US;q=0.8,en;q=0.7"},"params":{},"query":{},"body":{"chatId":"68ff7d80027df3cf816cba28","number":"5514974009711","cliente":"System Way (STW)","nomeSolicitante":"Vinicius Marotti","solicitanteId":"3707","solicitante":"System Way (STW) - Vinicius Marotti","assunto":"STW Desenvolvimento","subcategoria":"Automação","tipo":"Analisar","obsInterna":"","firstCallResolution":"true","fcrCausa":"Problema Resolvido","fcrObservacao":"Problema foi resolvido","grupo":"Suporte","operador":""},"webhookUrl":"https://n8n.systemway.com.vc/webhook/749c4c10-156f-4044-845f-a7b1bc4c55a2","executionMode":"production"}}]},"versionId":"6c95095c-2dde-4043-8c4f-00822daaa9c8","triggerCount":6,"shared":[{"createdAt":"2025-10-22T00:28:55.906Z","updatedAt":"2025-10-22T00:28:55.906Z","role":"workflow:owner","workflowId":"RMWFbJWTcYCUHj3G","projectId":"ENlbdpWxrdAUmx1o"}],"tags":[]}